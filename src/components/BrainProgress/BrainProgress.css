/* Add these new styles at the top */
.brain-progress-loading {
  display: flex;
  justify-content: center;
  align-items: center;
  width: 100%;
  height: 100%;
  min-height: 100px;
  background-color: #f5f5f5;
  border-radius: 8px;
  color: #666;
  font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', sans-serif;
}

/* Add paused state styles */
[data-paused="true"] .brain-path {
  animation-play-state: paused !important;
  transition: none !important;
}

/* Ensure visibility when paused */
[data-paused="true"][data-progress="100"] .brain-path {
  opacity: 1 !important;
  fill-opacity: 1 !important;
  stroke-dashoffset: 0 !important;
  transition: none !important;
}

/* Base container styling */
.brain-progress-container {
  position: relative;
  display: flex;
  justify-content: center;
  align-items: center;
  overflow: visible;
}

/* SVG base styling */
.brain-progress-svg {
  width: 100%;
  height: 100%;
  overflow: visible; /* Allow paths to extend beyond SVG boundaries */
}

/* Brain path base styling */
.brain-path {
  opacity: 0; /* Start hidden */
  stroke-linecap: round;
  stroke-linejoin: round;
  stroke-width: 4px;
  fill: url(#brain-gradient); /* Enable gradient fill */
  transform-origin: center;
  /* Enhanced animation properties */
  stroke-dasharray: var(--path-length, 0);
  stroke-dashoffset: var(--path-length, 0);
  /* Improved transition properties with longer durations */
  transition-property: stroke-dashoffset, opacity, fill-opacity;
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
  will-change: stroke-dashoffset, opacity, fill-opacity;
  /* Longer opacity transitions to prevent flash */
  transition-duration: 0.8s, 1.2s, 1.5s;
}

/* Stem path styling (path-1) - ensure it's visible first */
#path-1 {
  z-index: 10; /* Ensure stem is visually prioritized */
}

/* Enhance animation effects by level */
[data-progress="25"] #path-1 {
  opacity: 1;
}

[data-progress="50"] #path-1,
[data-progress="50"] #path-6,
[data-progress="50"] #path-9,
[data-progress="50"] #path-10 {
  opacity: 1;
}

[data-progress="75"] #path-1,
[data-progress="75"] #path-6,
[data-progress="75"] #path-5,
[data-progress="75"] #path-3,
[data-progress="75"] #path-2 {
  opacity: 1;
}

[data-progress="100"] .brain-path {
  opacity: 1;
  transition-duration: 0.8s;
}

/* Keep paths visible at 100% */
[data-progress="100"] .brain-path {
  opacity: 1;
  fill-opacity: 1;
  stroke-dashoffset: 0;
}

/* Add color stops for the paths to enhance visual quality */
.brain-path {
  filter: drop-shadow(0 0 1px rgba(255, 255, 255, 0.3));
}

/* On hover, add a subtle glow for interactive feedback */
.brain-progress-container:hover .brain-path[style*="opacity: 1"] {
  filter: drop-shadow(0 0 3px rgba(6, 201, 161, 0.5));
}

/* Accessibility focus style */
.brain-progress-container:focus-visible {
  outline: 3px solid #007afc;
  outline-offset: 2px;
  border-radius: 5px;
}

/* Style for the percentage label container */
.brain-progress-label {
  position: absolute;
  display: flex;
  justify-content: center;
  align-items: center;
  background-color: rgba(255, 255, 255, 0.7);
  border-radius: 50%;
  width: 80px;
  height: 80px;
  font-size: 1.2rem;
  font-weight: bold;
  color: #333;
  text-align: center;
  box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);
  transition: transform 0.3s ease;
}

/* Style for the percentage label container (which is the <g> element in the SVG) */
.brain-progress-container svg g {
  transition: transform 0.3s ease-out;
}

/* Style for text label */
.brain-progress-container svg text {
  font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', sans-serif;
  font-weight: 600;
}

/* Responsive adjustments for percentage label */
@media (max-width: 480px) {
  .brain-progress-label {
    font-size: 1rem;
    width: 60px;
    height: 60px;
  }
  
  .brain-progress-container svg text {
    font-size: 30px;
  }
  
  .brain-progress-container svg circle {
    r: 60px;
  }
}

/* Optional pulse animation when progress reaches 100% */
@keyframes pulse {
  0% { transform: scale(1); }
  50% { transform: scale(1.05); }
  100% { transform: scale(1); }
}

/* Apply pulse animation on the label when fully complete */
.brain-progress-container[aria-valuenow="100"] .brain-progress-label {
  animation: pulse 1s ease-in-out;
}

/* Apply pulse animation on completion */
.brain-progress-container[aria-valuenow="100"] svg g {
  animation: pulse 1.5s ease-in-out infinite;
}

/* Add a subtle drawing animation */
@keyframes draw {
  to { stroke-dashoffset: 0; }
}

/* Add a fade-in animation for better visibility */
@keyframes fadeIn {
  from { opacity: 0; }
  to { opacity: 1; }
}

/* Add fill animation keyframes */
@keyframes fillIn {
  from {
    fill-opacity: 0;
    stroke-dashoffset: var(--path-length, 0);
  }
  50% {
    fill-opacity: 0.2;
  }
  to {
    fill-opacity: 1;
    stroke-dashoffset: 0;
  }
}

/* Add specific styling for reverse animation */
@keyframes reversePathFill {
  from {
    fill-opacity: 1;
    stroke-dashoffset: 0;
  }
  50% {
    fill-opacity: 0.2;
  }
  to {
    fill-opacity: 0;
    stroke-dashoffset: var(--path-length, 0);
  }
}

/* Add data-attribute styling for reverse animation */
[data-reverse="true"] .brain-path {
  transition-timing-function: ease-out !important;
}

/* Improve transition timing for disappearing paths */
.brain-path.disappearing {
  animation: reversePathFill 1.2s ease-out forwards !important;
  transition: opacity 0.8s ease-out, fill-opacity 1s ease-out !important;
}

/* Improve animation for path disappearance */
@keyframes fadeOut {
  0% { 
    opacity: 1;
    fill-opacity: 1; 
    stroke-dashoffset: 0;
  }
  /* Slow start for smoother transition */
  30% {
    opacity: 1;
    fill-opacity: 0.9;
    stroke-dashoffset: 0;
  }
  100% { 
    opacity: 0;
    fill-opacity: 0;
    stroke-dashoffset: var(--path-length, 0);
  }
}

/* Ensure smoother transitions when animating backwards */
.brain-progress-container[aria-valuenow="100"] .brain-path {
  transition: stroke-dashoffset 1.2s cubic-bezier(0.4, 0, 0.2, 1),
              opacity 1.5s ease-out,
              fill-opacity 1.8s ease-out;
}

/* Add persistence class to prevent flash during transitions */
.brain-path.persistent {
  transition: opacity 1.8s ease-out, 
              fill-opacity 2s ease-out,
              stroke-dashoffset 1.5s ease-out;
}

/* Make paths persistent at 100% */
.brain-path.persistent {
  opacity: 1 !important;
  fill-opacity: 1 !important;
  stroke-dashoffset: 0 !important;
}

/* Enhance reverse animations */
[data-reverse="true"] .brain-path {
  transition-timing-function: ease-out !important;
}

/* Enhanced reverse fill animation */
@keyframes reversePathFill {
  0% {
    fill-opacity: 1;
    stroke-dashoffset: 0;
  }
  30% {
    fill-opacity: 0.8;
    stroke-dashoffset: calc(var(--path-length, 0) * 0.2);
  }
  70% {
    fill-opacity: 0.3;
    stroke-dashoffset: calc(var(--path-length, 0) * 0.7);
  }
  100% {
    fill-opacity: 0;
    stroke-dashoffset: var(--path-length, 0);
  }
}

/* Enhanced forward fill animation */
@keyframes fillIn {
  0% {
    fill-opacity: 0;
    stroke-dashoffset: var(--path-length, 0);
  }
  50% {
    fill-opacity: 0.4;
    stroke-dashoffset: calc(var(--path-length, 0) * 0.5);
  }
  80% {
    fill-opacity: 0.8;
    stroke-dashoffset: calc(var(--path-length, 0) * 0.1);
  }
  100% {
    fill-opacity: 1;
    stroke-dashoffset: 0;
  }
}

/* Apply reverse animation when needed */
[data-reverse="true"] .brain-path.disappearing {
  animation: reversePathFill 0.8s ease-out forwards !important;
}

/* Make reverse transitions more pronounced */
[data-reverse="true"] .brain-path {
  transition-duration: 0.6s, 0.8s, 1s !important;
}